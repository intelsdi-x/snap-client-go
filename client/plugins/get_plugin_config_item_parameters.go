package plugins

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetPluginConfigItemParams creates a new GetPluginConfigItemParams object
// with the default values initialized.
func NewGetPluginConfigItemParams() *GetPluginConfigItemParams {
	var ()
	return &GetPluginConfigItemParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetPluginConfigItemParamsWithTimeout creates a new GetPluginConfigItemParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetPluginConfigItemParamsWithTimeout(timeout time.Duration) *GetPluginConfigItemParams {
	var ()
	return &GetPluginConfigItemParams{

		timeout: timeout,
	}
}

// NewGetPluginConfigItemParamsWithContext creates a new GetPluginConfigItemParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetPluginConfigItemParamsWithContext(ctx context.Context) *GetPluginConfigItemParams {
	var ()
	return &GetPluginConfigItemParams{

		Context: ctx,
	}
}

// NewGetPluginConfigItemParamsWithHTTPClient creates a new GetPluginConfigItemParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetPluginConfigItemParamsWithHTTPClient(client *http.Client) *GetPluginConfigItemParams {
	var ()
	return &GetPluginConfigItemParams{
		HTTPClient: client,
	}
}

/*GetPluginConfigItemParams contains all the parameters to send to the API endpoint
for the get plugin config item operation typically these are written to a http.Request
*/
type GetPluginConfigItemParams struct {

	/*Pname*/
	Pname string
	/*Ptype*/
	Ptype string
	/*Pversion*/
	Pversion int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get plugin config item params
func (o *GetPluginConfigItemParams) WithTimeout(timeout time.Duration) *GetPluginConfigItemParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get plugin config item params
func (o *GetPluginConfigItemParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get plugin config item params
func (o *GetPluginConfigItemParams) WithContext(ctx context.Context) *GetPluginConfigItemParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get plugin config item params
func (o *GetPluginConfigItemParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get plugin config item params
func (o *GetPluginConfigItemParams) WithHTTPClient(client *http.Client) *GetPluginConfigItemParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get plugin config item params
func (o *GetPluginConfigItemParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPname adds the pname to the get plugin config item params
func (o *GetPluginConfigItemParams) WithPname(pname string) *GetPluginConfigItemParams {
	o.SetPname(pname)
	return o
}

// SetPname adds the pname to the get plugin config item params
func (o *GetPluginConfigItemParams) SetPname(pname string) {
	o.Pname = pname
}

// WithPtype adds the ptype to the get plugin config item params
func (o *GetPluginConfigItemParams) WithPtype(ptype string) *GetPluginConfigItemParams {
	o.SetPtype(ptype)
	return o
}

// SetPtype adds the ptype to the get plugin config item params
func (o *GetPluginConfigItemParams) SetPtype(ptype string) {
	o.Ptype = ptype
}

// WithPversion adds the pversion to the get plugin config item params
func (o *GetPluginConfigItemParams) WithPversion(pversion int64) *GetPluginConfigItemParams {
	o.SetPversion(pversion)
	return o
}

// SetPversion adds the pversion to the get plugin config item params
func (o *GetPluginConfigItemParams) SetPversion(pversion int64) {
	o.Pversion = pversion
}

// WriteToRequest writes these params to a swagger request
func (o *GetPluginConfigItemParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param pname
	if err := r.SetPathParam("pname", o.Pname); err != nil {
		return err
	}

	// path param ptype
	if err := r.SetPathParam("ptype", o.Ptype); err != nil {
		return err
	}

	// path param pversion
	if err := r.SetPathParam("pversion", swag.FormatInt64(o.Pversion)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
