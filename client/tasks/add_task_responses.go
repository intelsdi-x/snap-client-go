// Code generated by go-swagger; DO NOT EDIT.

package tasks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/intelsdi-x/snap-client-go/models"
)

// AddTaskReader is a Reader for the AddTask structure.
type AddTaskReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddTaskReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewAddTaskCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewAddTaskUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewAddTaskInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAddTaskCreated creates a AddTaskCreated with default headers values
func NewAddTaskCreated() *AddTaskCreated {
	return &AddTaskCreated{}
}

/*AddTaskCreated handles this case with default header values.

TaskResponse returns a task.
*/
type AddTaskCreated struct {
	Payload *models.Task
}

func (o *AddTaskCreated) Error() string {
	return fmt.Sprintf("[POST /tasks][%d] addTaskCreated  %+v", 201, o.Payload)
}

func (o *AddTaskCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Task)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddTaskUnauthorized creates a AddTaskUnauthorized with default headers values
func NewAddTaskUnauthorized() *AddTaskUnauthorized {
	return &AddTaskUnauthorized{}
}

/*AddTaskUnauthorized handles this case with default header values.

UnauthResponse returns Unauthorized error struct message.
*/
type AddTaskUnauthorized struct {
	Payload *models.UnauthError
}

func (o *AddTaskUnauthorized) Error() string {
	return fmt.Sprintf("[POST /tasks][%d] addTaskUnauthorized  %+v", 401, o.Payload)
}

func (o *AddTaskUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UnauthError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddTaskInternalServerError creates a AddTaskInternalServerError with default headers values
func NewAddTaskInternalServerError() *AddTaskInternalServerError {
	return &AddTaskInternalServerError{}
}

/*AddTaskInternalServerError handles this case with default header values.

ErrorResponse represents the Snap error response type.

It includes an error message and a map of fields.
*/
type AddTaskInternalServerError struct {
	Payload *models.Error
}

func (o *AddTaskInternalServerError) Error() string {
	return fmt.Sprintf("[POST /tasks][%d] addTaskInternalServerError  %+v", 500, o.Payload)
}

func (o *AddTaskInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
