package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// GetPluginConfigItemReader is a Reader for the GetPluginConfigItem structure.
type GetPluginConfigItemReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPluginConfigItemReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetPluginConfigItemOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetPluginConfigItemBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetPluginConfigItemOK creates a GetPluginConfigItemOK with default headers values
func NewGetPluginConfigItemOK() *GetPluginConfigItemOK {
	return &GetPluginConfigItemOK{}
}

/*GetPluginConfigItemOK handles this case with default header values.

PluginConfigItem represents cdata.ConfigDataNode which implements it's own UnmarshalJSON.
*/
type GetPluginConfigItemOK struct {
}

func (o *GetPluginConfigItemOK) Error() string {
	return fmt.Sprintf("[GET /plugins/{ptype}/{pname}/{pversion}/config][%d] getPluginConfigItemOK ", 200)
}

func (o *GetPluginConfigItemOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPluginConfigItemBadRequest creates a GetPluginConfigItemBadRequest with default headers values
func NewGetPluginConfigItemBadRequest() *GetPluginConfigItemBadRequest {
	return &GetPluginConfigItemBadRequest{}
}

/*GetPluginConfigItemBadRequest handles this case with default header values.

Error unsuccessful generic response to a failed API call
*/
type GetPluginConfigItemBadRequest struct {
	Payload GetPluginConfigItemBadRequestBody
}

func (o *GetPluginConfigItemBadRequest) Error() string {
	return fmt.Sprintf("[GET /plugins/{ptype}/{pname}/{pversion}/config][%d] getPluginConfigItemBadRequest  %+v", 400, o.Payload)
}

func (o *GetPluginConfigItemBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetPluginConfigItemBadRequestBody get plugin config item bad request body
swagger:model GetPluginConfigItemBadRequestBody
*/
type GetPluginConfigItemBadRequestBody map[string]string

// Validate validates this get plugin config item bad request body
func (o GetPluginConfigItemBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if swag.IsZero(o) { // not required
		return nil
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
