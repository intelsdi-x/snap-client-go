package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// PublishWorkflowMapNode publish workflow map node
// swagger:model PublishWorkflowMapNode
type PublishWorkflowMapNode struct {

	// config
	// Required: true
	Config map[string]interface{} `json:"Config"`

	// name
	// Required: true
	Name *string `json:"Name"`

	// target
	Target string `json:"Target,omitempty"`

	// version
	Version int64 `json:"Version,omitempty"`
}

// Validate validates this publish workflow map node
func (m *PublishWorkflowMapNode) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateConfig(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PublishWorkflowMapNode) validateConfig(formats strfmt.Registry) error {

	if err := validate.Required("config", "body", m.Config); err != nil {
		return err
	}

	return nil
}

func (m *PublishWorkflowMapNode) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}
